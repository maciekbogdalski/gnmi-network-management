/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.0.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.SubscriptionPostRequest;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-09-01T14:29:09.502319800+02:00[Europe/Warsaw]")
@Validated
@Tag(name = "subscription", description = "the subscription API")
public interface SubscriptionApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * DELETE /subscription : Cancel a subscription
     *
     * @param subscriptionId ID of the subscription to cancel. (required)
     * @return Subscription canceled successfully. (status code 200)
     */
    @Operation(
        operationId = "subscriptionDelete",
        summary = "Cancel a subscription",
        responses = {
            @ApiResponse(responseCode = "200", description = "Subscription canceled successfully.")
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/subscription"
    )
    default ResponseEntity<Void> subscriptionDelete(
        @NotNull @Parameter(name = "subscriptionId", description = "ID of the subscription to cancel.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "subscriptionId", required = true) String subscriptionId
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /subscription : Create a new subscription
     *
     * @param subscriptionPostRequest  (required)
     * @return Subscription created successfully. (status code 201)
     */
    @Operation(
        operationId = "subscriptionPost",
        summary = "Create a new subscription",
        responses = {
            @ApiResponse(responseCode = "201", description = "Subscription created successfully.")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/subscription",
        consumes = { "application/json" }
    )
    default ResponseEntity<Void> subscriptionPost(
        @Parameter(name = "SubscriptionPostRequest", description = "", required = true) @Valid @RequestBody SubscriptionPostRequest subscriptionPostRequest
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
